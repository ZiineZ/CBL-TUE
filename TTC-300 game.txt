TTC-300 game:

A game where your goal is to go as deep as possible to the earths core.
Once you start mining to the center of the eart in your drill, problems will occur.
for example:
-Failure in oxygen pipe
-Refuel
-Coolant system malfunction
-Ore mining


The ship is controlled by an intuitive system called TTC-300. 
TTC-300 can do anything except it needs a command from the user to perform that action.
TTC-300 can repair stuff, manage electricity, manage speed. It can do all.

The user needs to repair the damages done to the ship by instructing the TTC-300 what to do.
The user has access to a terminal which is what controls the TTC-300.
To fix some of the issues the ship receives you have to give specific instructions to the TTC-300.

-Failure in oxygen pipe:
    > System.ventilation.close()
    # The player now has 30 seconds to finish the repair or he will die of suffocation
    > System.repairtool.diagnostics(ventilation)

    # Shows 3 possible issues what could be wrong with the ventilation:
    #   1. Clogged ventilation pipe
        > System.pressurecontroller.pump(ventilation);
        > System.ventilation.open();

    #   2. Empty oxygen tank
        > System.supply.refill(oxygen);
        > System.ventillation.open();

    #   3. Leak in ventilation pipe
        > System.repairtool.weld(ventilation);
        > System.ventillation.open();

-Refueling ship:
    #The player needs to check the ships fuel manually:
    > System.repairtool.diagnostics(fuel);
    # prints the fuel of the ship from 0%-100%
    # if the fuel is below 10% the ships lighting will fail (and it will be harder to see other problems)
    
    #Refuel the ship:
    #   1. Stop the engine, refuel and start the engine.
        > System.engine.stop();
        > System.engine.refuel({percentage})
        > System.engine.start();
        # The player enters the percentage that the engine needs to be refueled, if the player overfuels the engine you've lost.

-Failure in coolant system.
    #   1. Determine the temperature:
        > System.coolant.read();
        # Returns the temperature in degrees.
    
    #   2. Use the temperature to fraction regulator.
        > System.coolant.regulator(40)
        # returns 2 values in percentages, the first one is the heat pipe, the second one is the coolant pipe.

    #   3. Set the temperature to the percentages give.
        > System.coolant.set({heat percentage}, {coolant percentage});
        # Ex: > System.coolant.set(40, 60);

-Ore mining
    # Ore mining grants the user aditional points, the mining process is simple but requieres right timing.
    #   1. Detect at which depth is the next ore:
        > System.resources.scan();
        # Gives a depth value that is always higher than the current depth.

    #   2. Mine the ore if you are in the range.
        > System.resources.mine();
        # If the user inputs this at the time the ship is at the depth of the ore given by the scanner then the user gets extra points.
        # The user has a margin of 100 meters to use the mine() command.
        # Ex: The ore depth is 3600 meters, the user has a window of 3500-3700m to input the mine() command to get points.
    
